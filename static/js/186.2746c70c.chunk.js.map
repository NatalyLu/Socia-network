{"version":3,"file":"static/js/186.2746c70c.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/common/field/field.module.css?bce7","components/common/field/field.jsx","webpack://react-kabzda-1/./src/components/common/textarea-form/textarea-form.module.css?8398","components/common/textarea-form/textarea-form.jsx","webpack://react-kabzda-1/./src/components/dialogs/dialogs.module.css?c5d1","components/dialogs/dialog/dialog.jsx","components/dialogs/messages/messages.jsx","components/dialogs/dialogs.jsx","components/dialogs/dialogs-container.jsx","hoc/with-auth-redirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"field_label__ACZMZ\",\"labelCheckbox\":\"field_labelCheckbox__1O2vY\",\"input\":\"field_input__SvBXP\",\"error\":\"field_error__jOtv7\",\"textarea\":\"field_textarea__LJPwo\",\"checkbox\":\"field_checkbox__AASu5\"};","import { Errors } from \"../../../const\";\nimport s from \"./field.module.css\";\n\nconst Field = ({children, type, errors, registerObj, placeholder, fieldName, clearErrors, errorMessage}) => {\n  if (type === \"checkbox\") {\n    return(\n      <label className={s.labelCheckbox}>\n        {children}\n        <input\n          className={s.checkbox}\n          type={type}\n          {...registerObj}\n          name={fieldName}\n        ></input>\n      </label>\n    )\n  } else if (type === \"textarea\") {\n    return(\n      <label className={s.label}>\n        {children}\n        <textarea\n          className={`${s.textarea} ${errors[fieldName] ? \"error\" : \"\"}`}\n          {...registerObj}\n          type={type}\n          placeholder={placeholder}\n        ></textarea>\n        {errors[fieldName] && <p className=\"text-error\">{errors[fieldName].message || errorMessage || Errors.DEFAULT_FIELD_ERROR}</p>}\n      </label>\n    )\n  }else {\n    return(\n      <label className={s.label}>\n        {children}\n        <input\n          className={`${s.input} ${errors[fieldName] ? \"error\" : \"\"}`}\n          {...registerObj}\n          onFocus={() => {clearErrors()}}\n          type={type}\n          placeholder={placeholder}\n        ></input>\n        {errors[fieldName] && <p className=\"text-error\">{errors[fieldName].message || errorMessage || Errors.DEFAULT_FIELD_ERROR}</p>}\n      </label>\n    )\n  } \n}\n\nexport default Field;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"textarea-form_form__dQ1FN\"};","import { useEffect } from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport Field from \"../field/field\";\nimport s from \"./textarea-form.module.css\";\n\nconst TextareaForm = ({children, submitHandler, fieldName, registerObj, placeholder, errorText, buttonText, mode}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid, isSubmitSuccessful },\n    reset,\n  } = useForm({mode: mode});\n\n  const formSubmitHandler = (data) => {\n    submitHandler(data);\n  }\n\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n  }, [isSubmitSuccessful, reset]);\n\n  return(\n    <form onSubmit={handleSubmit(formSubmitHandler)} className={s.form}>\n      <Field\n        type=\"textarea\"\n        errors={errors}\n        fieldName={fieldName}\n        registerObj={{ ...register(fieldName, {...registerObj}) }}\n        placeholder={placeholder}\n        errorMessage={errorText}\n      >{children}</Field>\n      \n      <button type=\"submit\" className=\"submit\" disabled={!isValid}>{buttonText}</button>\n    </form>\n  )\n}\n\nexport default TextareaForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__Od7-m\",\"dialogs__users\":\"dialogs_dialogs__users__xf5bO\",\"dialogs__messages\":\"dialogs_dialogs__messages__2lkHt\",\"messages\":\"dialogs_messages__TjUtq\",\"messages__list\":\"dialogs_messages__list__HjNsg\",\"dialogs__name\":\"dialogs_dialogs__name__8l-PA\",\"active\":\"dialogs_active__fa8FP\"};","import { NavLink } from \"react-router-dom\";\nimport { PathLinks } from \"../../../const\";\nimport s from \"../dialogs.module.css\";\n\nconst Dialog = (props) => {\n  return (\n    <ul className={s.dialogs__users}>\n      {props.users.map((item) => {\n        let path = PathLinks.DIALOGS + \"/\" + item.id;\n        let classes = ({isActive}) => (isActive ? `${s.active } ` : \"\") + s.dialogs__name;\n        return <li key={item.id}><NavLink className={classes} to={path}>{item.name}</NavLink></li>;\n      })}\n    </ul>\n  );\n};\n\nexport default Dialog;","import s from \"../dialogs.module.css\";\n\nconst MessageComponent = (props) => {\n  return <li>{props.children}</li>;\n}\n\nconst Messages = (props) => {\n const {messages} = props;\n\n  return (\n    <ul className={s.messages__list}>\n      {messages.map((item) => <MessageComponent key={item.id}>{item.message}</MessageComponent> )}\n    </ul>\n  );\n};\n\nexport default Messages;","import s from \"./dialogs.module.css\";\nimport Dialog from \"./dialog/dialog\";\nimport Messages from \"./messages/messages\";\nimport { DialogSymbols, Errors } from \"../../const\";\nimport TextareaForm from \"../common/textarea-form/textarea-form\";\n\nconst Dialogs = (props) => {\n  let addMessageHandler = (data) => {\n    props.sendMessage(data.newMessage);\n  }\n  const registerObj = {required: true, minLength: DialogSymbols.MIN, maxLength:DialogSymbols.MAX };\n\n  return (\n    <div className={s.dialogs}>\n      <Dialog users={props.dialogs.users} />\n      <div className={`${s.dialogs__messages} ${s.messages}`}>\n        <Messages messages={props.dialogs.messages} />\n        <TextareaForm\n          mode=\"onChange\"\n          submitHandler={addMessageHandler}\n          fieldName=\"newMessage\"\n          registerObj={registerObj}\n          placeholder=\"Enter your message\"\n          errorText={Errors.DIALOG_TEXTAREA_ERROR}\n          buttonText=\"Send\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport Dialogs from \"./dialogs\";\nimport { sendMessageActionCreator } from \"../../redux/dialogs-reducer\";\nimport { withAuthRedirect } from \"../../hoc/with-auth-redirect\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogs: state.dialogs,\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (message) => {\n      dispatch(sendMessageActionCreator(message));\n    },\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  const ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n  return ConnectAuthRedirectComponent;\n};\n"],"names":["children","type","errors","registerObj","placeholder","fieldName","clearErrors","errorMessage","className","s","name","message","Errors","onFocus","submitHandler","errorText","buttonText","mode","useForm","register","handleSubmit","formState","isValid","isSubmitSuccessful","reset","useEffect","onSubmit","data","disabled","props","users","map","item","path","PathLinks","id","isActive","to","MessageComponent","messages","required","minLength","DialogSymbols","maxLength","dialogs","sendMessage","newMessage","compose","connect","state","dispatch","sendMessageActionCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}