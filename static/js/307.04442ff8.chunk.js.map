{"version":3,"file":"static/js/307.04442ff8.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/common/field/field.module.css?bce7","components/common/field/field.jsx","webpack://react-kabzda-1/./src/components/common/textarea-form/textarea-form.module.css?8398","components/common/textarea-form/textarea-form.jsx","webpack://react-kabzda-1/./src/components/profile/posts/post/post.module.css?9010","components/profile/posts/post/post.jsx","webpack://react-kabzda-1/./src/components/profile/posts/posts.module.css?ca8d","components/profile/posts/posts.jsx","components/profile/posts/posts-container.jsx","webpack://react-kabzda-1/./src/components/profile/profile.module.css?5210","components/profile/profile-data-form/profile-data-form.jsx","components/profile/profile-details/profile-details.jsx","components/profile/profile-img/profile-img.jsx","components/profile/profile-status/profile-status.jsx","components/profile/profile-info/profile-info.jsx","components/error/error-block.jsx","components/profile/profile.jsx","components/profile/profile-container.jsx","hoc/with-url-params.js","hoc/with-auth-redirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"field_label__ACZMZ\",\"labelCheckbox\":\"field_labelCheckbox__1O2vY\",\"input\":\"field_input__SvBXP\",\"error\":\"field_error__jOtv7\",\"textarea\":\"field_textarea__LJPwo\",\"checkbox\":\"field_checkbox__AASu5\"};","import { Errors } from \"../../../const\";\nimport s from \"./field.module.css\";\n\nconst Field = ({children, type, errors, registerObj, placeholder, fieldName, clearErrors, errorMessage}) => {\n  if (type === \"checkbox\") {\n    return(\n      <label className={s.labelCheckbox}>\n        {children}\n        <input\n          className={s.checkbox}\n          type={type}\n          {...registerObj}\n          name={fieldName}\n        ></input>\n      </label>\n    )\n  } else if (type === \"textarea\") {\n    return(\n      <label className={s.label}>\n        {children}\n        <textarea\n          className={`${s.textarea} ${errors[fieldName] ? \"error\" : \"\"}`}\n          {...registerObj}\n          type={type}\n          placeholder={placeholder}\n        ></textarea>\n        {errors[fieldName] && <p className=\"text-error\">{errors[fieldName].message || errorMessage || Errors.DEFAULT_FIELD_ERROR}</p>}\n      </label>\n    )\n  }else {\n    return(\n      <label className={s.label}>\n        {children}\n        <input\n          className={`${s.input} ${errors[fieldName] ? \"error\" : \"\"}`}\n          {...registerObj}\n          onFocus={() => {clearErrors()}}\n          type={type}\n          placeholder={placeholder}\n        ></input>\n        {errors[fieldName] && <p className=\"text-error\">{errors[fieldName].message || errorMessage || Errors.DEFAULT_FIELD_ERROR}</p>}\n      </label>\n    )\n  } \n}\n\nexport default Field;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"textarea-form_form__dQ1FN\"};","import { useEffect } from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport Field from \"../field/field\";\nimport s from \"./textarea-form.module.css\";\n\nconst TextareaForm = ({children, submitHandler, fieldName, registerObj, placeholder, errorText, buttonText, mode}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid, isSubmitSuccessful },\n    reset,\n  } = useForm({mode: mode});\n\n  const formSubmitHandler = (data) => {\n    submitHandler(data);\n  }\n\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n  }, [isSubmitSuccessful, reset]);\n\n  return(\n    <form onSubmit={handleSubmit(formSubmitHandler)} className={s.form}>\n      <Field\n        type=\"textarea\"\n        errors={errors}\n        fieldName={fieldName}\n        registerObj={{ ...register(fieldName, {...registerObj}) }}\n        placeholder={placeholder}\n        errorMessage={errorText}\n      >{children}</Field>\n      \n      <button type=\"submit\" className=\"submit\" disabled={!isValid}>{buttonText}</button>\n    </form>\n  )\n}\n\nexport default TextareaForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"posts__item\":\"post_posts__item__XzHY1\"};","import s from \"./post.module.css\";\n\nconst Post = (props) => {\n  const {link, children} = props;\n  return(\n    <li className={s.posts__item}>\n      <img src={link} alt=\"User avatar\" />\n      <p>{children}</p>\n    </li>\n  )\n}\n\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"posts__list\":\"posts_posts__list__tY3ge\"};","import React from \"react\";\nimport Post from \"./post/post\";\nimport s from \"./posts.module.css\";\nimport avatar from \"../../../images/avatar-1.jpg\";\nimport { Errors, TextareaSymbols } from \"../../../const\";\nimport TextareaForm from \"../../common/textarea-form/textarea-form\";\n\nconst Posts = (props) => {\n  let addPostHandler = (data) => {\n    props.addPost(data.newPost);\n  }\n\n  const registerObj = {required: true, minLength: TextareaSymbols.MIN, maxLength: TextareaSymbols.MAX };\n\n  return(\n    <section className={s.posts}>\n      <TextareaForm\n        mode=\"onChange\"\n        submitHandler={addPostHandler}\n        fieldName=\"newPost\"\n        registerObj={registerObj}\n        errorText={Errors.POST_TEXTAREA_ERROR}\n        buttonText=\"Add posts\"\n      />\n      <ul className={s.posts__list}>\n        {props.posts.map((item) => <Post key={item.id} link={avatar}>{item.text}</Post>)}\n      </ul>\n    </section>\n  )\n}\n\nexport default Posts;","import Posts from \"./posts\";\nimport { addPost } from \"../../../redux/profile-reducer\";\nimport { connect } from \"react-redux\";\n\n// конектим Posts к стору\n// connect передаст в функцию state из стора, т.е. store.getState();\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profile.posts,\n    newPostText: state.profile.newPostText\n  }\n};\n\n// а тут колбэки, т.е. connect закинет сюда dispatch\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (post) => {\n      dispatch(addPost(post));\n    }\n  }\n};\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nexport default PostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"profile_profile__SEO2H\",\"profile__img\":\"profile_profile__img__8KTtG\",\"profile__user\":\"profile_profile__user__d2hTy\",\"profile__avatar\":\"profile_profile__avatar__Pb44s\",\"profile__file\":\"profile_profile__file__NvYXP\",\"profile__details\":\"profile_profile__details__pmR5N\",\"profile__mainList\":\"profile_profile__mainList__pp6mn\",\"profile__subList\":\"profile_profile__subList__vS8Z8\",\"profile__form\":\"profile_profile__form__KvZO0\",\"profile__title\":\"profile_profile__title__o9TuK\",\"profile__list\":\"profile_profile__list__aIx5u\",\"profile__errors\":\"profile_profile__errors__jb17U\"};","import {useForm} from \"react-hook-form\";\nimport { Errors, PROFILE_FORM_FIELD_MAX_LENGTH } from \"../../../const\";\nimport Field from \"../../common/field/field\";\n\n\nconst ProfileDataForm = ({styles, profile, formSubmitClickHandle, isFetchingProfileInfo}) => {\n  const {\n    register,\n    handleSubmit,\n    clearErrors,\n    formState: { errors, isValid },\n  } = useForm({\n    defaultValues: {\n      fullName: profile.fullName,\n      aboutMe: profile.aboutMe,\n      lookingForAJob: profile.lookingForAJob,\n      lookingForAJobDescription: profile.lookingForAJobDescription,\n      \"contacts.facebook\": profile.contacts.facebook,\n      \"contacts.github\": profile.contacts.github,\n      \"contacts.instagram\": profile.contacts.instagram,\n      \"contacts.mainLink\": profile.contacts.mainLink,\n      \"contacts.twitter\": profile.contacts.twitter,\n      \"contacts.vk\": profile.contacts.vk,\n      \"contacts.website\": profile.contacts.website,\n      \"contacts.youtube\": profile.contacts.youtube,\n    },\n    mode: \"onChange\",\n  });\n\n  const createRegisterObj = (name) => {\n    return {...register(name, {\n      maxLength: PROFILE_FORM_FIELD_MAX_LENGTH\n    })};\n  } \n\n  const createTextInput = (type, fieldName, placeholder, labelText) => {\n    return <Field type={type} errors={errors} registerObj={createRegisterObj(fieldName)} fieldName={fieldName} placeholder={placeholder} errorMessage={Errors.PROFILE_FIELD_TOO_LONG} clearErrors={clearErrors}>{labelText}</Field>\n  }\n\n  return (\n    <form className={styles.profile__form} onSubmit={handleSubmit(formSubmitClickHandle)}>\n      <span className={styles.profile__title}>Main information:</span>\n      {createTextInput(\"text\",\"fullName\", \"Enter your full name\", \"Full name\")}\n      {createTextInput(\"text\",\"aboutMe\", \"Enter description\", \"About me\")}\n      <Field type=\"checkbox\" fieldName=\"lookingForAJob\" registerObj={{...register(\"lookingForAJob\")}} >Looking for a job</Field>\n      {createTextInput(\"textarea\", \"lookingForAJobDescription\", \"Enter your skills\", \"My skills\")}\n\n      <span className={styles.profile__title}>Contacts:</span>\n      <ul className={styles.profile__list}>\n        {Object.keys(profile.contacts).map(key => {\n          return <li key={key}>{createTextInput(\"text\", `contacts.${key}`, \"\", `${key}`)}</li>\n        })}\n      </ul>\n      <button type=\"submit\" className=\"submit\" disabled={!isValid || isFetchingProfileInfo}>Save</button>\n    </form>\n  );\n};\n\nexport default ProfileDataForm;\n","const ProfileDetails = ({styles, profile, isOwner, goToEditModeHandler}) => {\n  return (\n    <div className={styles.profile__details}>\n      <ul className={styles.profile__mainList}>\n        <li><b>Full name: </b>{profile.fullName}</li>\n        <li><b>About me: </b>{profile.aboutMe}</li>\n        <li><b>Looking for a job: </b>{profile.lookingForAJob ? \"yes\" : \"no\"}</li>\n        {profile.lookingForAJob &&\n          <li><b>My skills:</b> {profile.lookingForAJobDescription}</li>\n        }\n        <li><b>Contacts: </b>\n          <ul className={styles.profile__subList}>\n            {Object.keys(profile.contacts).map(key => {\n              return <li key={key}><span><b>{key}: </b>{profile.contacts[key]}</span></li>\n            })}\n          </ul>\n        </li>\n      </ul>\n      {isOwner && <button type=\"button\" className=\"submit\" onClick={goToEditModeHandler}>Edit</button>}\n    </div>\n  );\n};\n\nexport default ProfileDetails;","const ProfileImg = ({styles, savePhoto}) => {\n\n  const inputFileHandler = (evt) => {\n    if (evt.target.files.length) {\n      savePhoto(evt.target.files[0]);\n    }\n  }\n\n  return (\n    <div className={styles.profile__file}>\n      <input id=\"avatar\" className=\"visually-hidden\" name=\"avatar\" type=\"file\" accept=\"image/png, image/jpeg\" onChange={inputFileHandler} />\n      <label htmlFor=\"avatar\" className=\"submit\">Choose a profile picture</label>\n    </div>\n  );\n};\n\nexport default ProfileImg;","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatus = ({status, updateStatus}) => {\n  let [editMode, setEditMode] = useState(false);\n  let [useStateStatus, setUseStateStatus] = useState(status);\n\n  useEffect( () => {\n    setUseStateStatus(status);\n  }, [status]);\n\n  const activeEditMode = () => {\n    setEditMode(!editMode);\n    if(editMode) {\n      updateStatus(useStateStatus)\n    }\n  }\n\n  const statusChangeHandler = (e) => {\n    setUseStateStatus(e.target.value);\n  }\n\n  return (\n    <div>\n      {editMode\n        ? <div>\n            <input autoFocus className=\"input\" onChange={statusChangeHandler} onBlur={activeEditMode} value={useStateStatus}></input>\n          </div>\n        : <div>\n            <b>Status: </b><span onDoubleClick={activeEditMode}>{status || \"No status\"}</span>\n          </div>\n      }\n    </div>\n  );\n};\n\nexport default ProfileStatus;","import { useState } from \"react\";\nimport { Errors } from \"../../../const\";\nimport user from \"../../../images/user.jpg\";\nimport Loader from \"../../loader/loader\";\nimport ProfileDataForm from \"../profile-data-form/profile-data-form\";\nimport ProfileDetails from \"../profile-details/profile-details\";\nimport ProfileImg from \"../profile-img/profile-img\";\nimport ProfileStatus from \"../profile-status/profile-status\";\n\nconst ShowErrors = ({errors, styles}) => {\n  return(\n    <div class={styles.profile__errors}>\n      <p class=\"text-error\">{Errors.DEFAULT_ERROR}</p>\n      <ol>\n        {Object.keys(errors).map(err => {\n          return (<li key={err} class=\"text-error\">{errors[err]}</li>)\n        })}\n      </ol>\n    </div>\n  );\n}\n\nconst ProfileInfo = ({styles, profile, status, updateStatus, isOwner, savePhoto, isFetchingPhoto, saveProfileInfo, isFetchingProfileInfo}) => {\n  let [editMode, setEditMode] = useState(false);\n  let [profileErrors, setProfileErrors] = useState([]);\n\n  const FormSubmitClickHandle = (data) => {\n    saveProfileInfo(data).then(() => {\n      setProfileErrors([]);\n      setEditMode(false);\n    })\n    .catch((err) => {\n      setProfileErrors(err);\n    })\n  };\n\n  return (\n    <div className={styles.profile__user}>\n      {isFetchingPhoto\n        ? <Loader />\n        : <img\n            className={styles.profile__avatar}\n            src={profile.photos.large || user}\n            alt=\"Avatar\"\n            width=\"256\"\n            height=\"171\"\n          />\n      }\n      {isOwner && <ProfileImg savePhoto={savePhoto} styles={styles} />}\n      {isFetchingProfileInfo && <Loader />}\n      {editMode\n        ? <ProfileDataForm styles={styles} profile={profile} formSubmitClickHandle={FormSubmitClickHandle} isFetchingProfileInfo={isFetchingProfileInfo} />\n        : <ProfileDetails styles={styles} profile={profile} isOwner={isOwner} goToEditModeHandler={() => {setEditMode(!editMode);}} />}\n      {profileErrors.length !== 0 && <ShowErrors errors={profileErrors} styles={styles} />}\n      <ProfileStatus status={status} updateStatus={updateStatus} />\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","let ErrorBlock = () => {\n  return (\n    <div>Sorry, but something was wrong, please reload the  page</div>\n  )\n}\n\nexport default ErrorBlock;","import PostsContainer from \"./posts/posts-container\";\nimport s from \"./profile.module.css\";\nimport ProfileInfo from \"./profile-info/profile-info\"\nimport Loader from \"../loader/loader\";\nimport ErrorBlock from \"../error/error-block\";\n\nconst Profile = (props) => {\n  return (\n    <section className={s.profile}>\n      {props.isFetchingProfile\n        ? <Loader /> \n        : props.profile \n            ? <>\n                <ProfileInfo\n                  styles={s}\n                  profile={props.profile}\n                  status={props.status}\n                  updateStatus={props.updateStatus}\n                  isOwner={props.isOwner}\n                  savePhoto={props.savePhoto}\n                  isFetchingPhoto={props.isFetchingPhoto}\n                  saveProfileInfo={props.saveProfileInfo}\n                  isFetchingProfileInfo={props.isFetchingProfileInfo}\n                />\n                <PostsContainer />\n              </>\n            : <ErrorBlock />\n      }\n    </section>\n  )\n};\n\nexport default Profile;\n","import { connect } from \"react-redux\";\nimport React from \"react\";\nimport { compose } from \"redux\";\nimport Profile from \"./profile\";\nimport {getProfileThunkCreator, getStatus, updateStatus, savePhoto, saveProfileInfo} from \"../../redux/profile-reducer\";\nimport { withAuthRedirect } from \"../../hoc/with-auth-redirect\";\nimport { withUrlParams } from \"../../hoc/with-url-params\";\n\nclass ProfileWrapper extends React.Component {\n\n  refreshProfile = () => {\n    let id = this.props.params.id || this.props.authorizedUserId;\n    this.props.getProfile(id);\n    this.props.getStatus(id);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prev) {\n    if (this.props.params.id !== prev.params.id) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile {...this.props} isOwner={Number(this.props.params.id) === this.props.authorizedUserId || !this.props.params.id} />\n    )\n  }\n};\n\nlet mapStateToProps = (state) => ({\n  profile: state.profile.profile,\n  isFetchingProfile: state.profile.isFetchingProfile,\n  status: state.profile.status,\n  authorizedUserId: state.auth.id,\n  isAuth: state.auth.isAuth,\n  isFetchingPhoto: state.profile.isFetchingPhoto,\n  isFetchingProfileInfo: state.profile.isFetchingProfileInfo,\n});\n\nexport default compose(\n  connect(mapStateToProps,{getProfile: getProfileThunkCreator, getStatus, updateStatus, savePhoto, saveProfileInfo}),\n  withUrlParams,\n  withAuthRedirect\n)(ProfileWrapper)\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n\nexport const withUrlParams= (Component) => {\n  const ComponentWithParams = (props) => {\n    return (<Component {...props} params={useParams()} />);\n  }\n\n  return ComponentWithParams;\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  const ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n  return ConnectAuthRedirectComponent;\n};\n"],"names":["children","type","errors","registerObj","placeholder","fieldName","clearErrors","errorMessage","className","s","name","message","Errors","onFocus","submitHandler","errorText","buttonText","mode","useForm","register","handleSubmit","formState","isValid","isSubmitSuccessful","reset","useEffect","onSubmit","data","disabled","props","link","src","alt","required","minLength","TextareaSymbols","maxLength","addPost","newPost","posts","map","item","avatar","text","id","PostsContainer","connect","state","profile","newPostText","dispatch","post","Posts","styles","formSubmitClickHandle","isFetchingProfileInfo","defaultValues","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","createTextInput","labelText","PROFILE_FORM_FIELD_MAX_LENGTH","profile__form","profile__title","profile__list","Object","keys","key","isOwner","goToEditModeHandler","profile__details","profile__mainList","profile__subList","onClick","savePhoto","profile__file","accept","onChange","evt","target","files","length","htmlFor","status","updateStatus","useState","editMode","setEditMode","useStateStatus","setUseStateStatus","activeEditMode","autoFocus","e","value","onBlur","onDoubleClick","ShowErrors","class","profile__errors","err","isFetchingPhoto","saveProfileInfo","profileErrors","setProfileErrors","profile__user","profile__avatar","photos","large","user","width","height","then","catch","isFetchingProfile","ProfileWrapper","refreshProfile","params","authorizedUserId","getProfile","getStatus","this","prev","Number","React","compose","auth","isAuth","getProfileThunkCreator","Component","useParams","withAuthRedirect","mapStateToPropsForRedirect","RedirectComponent","to"],"sourceRoot":""}