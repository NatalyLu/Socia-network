{"version":3,"file":"static/js/512.dd4bcf0f.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/common/textarea-form/textarea-form.module.css?8398","components/common/textarea-form/textarea-form.jsx","webpack://react-kabzda-1/./src/components/profile/posts/post/post.module.css?9010","components/profile/posts/post/post.jsx","webpack://react-kabzda-1/./src/components/profile/posts/posts.module.css?ca8d","components/profile/posts/posts.jsx","components/profile/posts/posts-container.jsx","webpack://react-kabzda-1/./src/components/profile/profile.module.css?5210","components/profile/profile-status/profile-status.jsx","components/profile/profile-info/profile-info.jsx","components/error/error-block.jsx","components/profile/profile.jsx","components/profile/profile-container.jsx","hoc/with-url-params.js","hoc/with-auth-redirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"textarea-form_form__dQ1FN\"};","import { useEffect } from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport s from \"./textarea-form.module.css\";\n\nconst TextareaForm = ({submitHandler, fieldName, registerObj, placeholder, errorText, buttonText, mode}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid, isSubmitSuccessful },\n    reset,\n  } = useForm({mode: mode});\n\n  const formSubmitHandler = (data) => {\n    submitHandler(data);\n  }\n\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n  }, [isSubmitSuccessful, reset]);\n\n  return(\n    <form onSubmit={handleSubmit(formSubmitHandler)} className={s.form}>\n      <textarea\n        className={`textarea ${errors[fieldName] && \"error\"}`}\n        {...register(fieldName , {...registerObj})}\n        placeholder={placeholder}\n      ></textarea>\n      \n      {errors[fieldName] && <p className=\"text-error\">{errorText}</p>}\n      \n      <button type=\"submit\" className=\"submit\" disabled={!isValid}>{buttonText}</button>\n    </form>\n  )\n}\n\nexport default TextareaForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"posts__item\":\"post_posts__item__XzHY1\"};","import s from \"./post.module.css\";\n\nconst Post = (props) => {\n  const {link, children} = props;\n  return(\n    <li className={s.posts__item}>\n      <img src={link} alt=\"User avatar\" />\n      <p>{children}</p>\n    </li>\n  )\n}\n\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"posts__list\":\"posts_posts__list__tY3ge\"};","import React from \"react\";\nimport Post from \"./post/post\";\nimport s from \"./posts.module.css\";\nimport avatar from \"../../../images/avatar-1.jpg\";\nimport { Errors, TextareaSymbols } from \"../../../const\";\nimport TextareaForm from \"../../common/textarea-form/textarea-form\";\n\nconst Posts = (props) => {\n  let addPostHandler = (data) => {\n    props.addPost(data.newPost);\n  }\n\n  const registerObj = {required: true, minLength: TextareaSymbols.MIN, maxLength: TextareaSymbols.MAX };\n\n  return(\n    <section className={s.posts}>\n      <TextareaForm\n        mode=\"onChange\"\n        submitHandler={addPostHandler}\n        fieldName=\"newPost\"\n        registerObj={registerObj}\n        errorText={Errors.POST_TEXTAREA_ERROR}\n        buttonText=\"Add posts\"\n      />\n      <ul className={s.posts__list}>\n        {props.posts.map((item) => <Post key={item.id} link={avatar}>{item.text}</Post>)}\n      </ul>\n    </section>\n  )\n}\n\nexport default Posts;","import Posts from \"./posts\";\nimport { addPost } from \"../../../redux/profile-reducer\";\nimport { connect } from \"react-redux\";\n\n// конектим Posts к стору\n// connect передаст в функцию state из стора, т.е. store.getState();\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profile.posts,\n    newPostText: state.profile.newPostText\n  }\n};\n\n// а тут колбэки, т.е. connect закинет сюда dispatch\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (post) => {\n      dispatch(addPost(post));\n    }\n  }\n};\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nexport default PostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"profile_profile__SEO2H\",\"profile__img\":\"profile_profile__img__8KTtG\",\"profile__user\":\"profile_profile__user__d2hTy\",\"profile__avatar\":\"profile_profile__avatar__Pb44s\"};","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatus = ({status, updateStatus}) => {\n  let [editMode, setEditMode] = useState(false);\n  let [useStateStatus, setUseStateStatus] = useState(status);\n\n  useEffect( () => {\n    setUseStateStatus(status);\n  }, [status]);\n\n  const activeEditMode = () => {\n    setEditMode(!editMode);\n    if(editMode) {\n      updateStatus(useStateStatus)\n    }\n  }\n\n  const statusChangeHandler = (e) => {\n    setUseStateStatus(e.target.value);\n  }\n\n  return (\n    <div>\n      {editMode\n        ? <div>\n            <input autoFocus className=\"input\" onChange={statusChangeHandler} onBlur={activeEditMode} value={useStateStatus}></input>\n          </div>\n        : <span onDoubleClick={activeEditMode}>{status || \"No status\"}</span>\n      }\n    </div>\n  );\n};\n\nexport default ProfileStatus;","import user from \"../../../images/user.jpg\";\nimport ProfileStatus from \"../profile-status/profile-status\";\n\nconst ProfileInfo = ({styles, profile, status, updateStatus}) => {\n  return (\n    <div className={styles.profile__user}>\n      <img\n        className={styles.profile__avatar}\n        src={profile.photos.large != null ? profile.photos.large : user}\n        alt=\"Avatar\"\n        width=\"256\"\n        height=\"171\"\n      ></img>\n      <ProfileStatus status={status} updateStatus={updateStatus} />\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","let ErrorBlock = () => {\n  return (\n    <div>Sorry, but something was wrong, please reload the  page</div>\n  )\n}\n\nexport default ErrorBlock;","import PostsContainer from \"./posts/posts-container\";\nimport s from \"./profile.module.css\";\nimport ProfileInfo from \"./profile-info/profile-info\"\nimport Loader from \"../loader/loader\";\nimport ErrorBlock from \"../error/error-block\";\n\nconst Profile = (props) => {\n  return (\n    <section className={s.profile}>\n      {props.isFetchingProfile\n        ? <Loader /> \n        : props.profile \n            ? <>\n                <ProfileInfo styles={s} profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n                <PostsContainer />\n              </>\n            : <ErrorBlock />\n      }\n    </section>\n  )\n};\n\nexport default Profile;\n","import { connect } from \"react-redux\";\nimport React from \"react\";\nimport { compose } from \"redux\";\nimport Profile from \"./profile\";\nimport {getProfileThunkCreator, getStatus, updateStatus} from \"../../redux/profile-reducer\";\nimport { withAuthRedirect } from \"../../hoc/with-auth-redirect\";\nimport { withUrlParams } from \"../../hoc/with-url-params\";\n\nclass ProfileWrapper extends React.Component {\n  componentDidMount() {\n    let id = this.props.params.id || this.props.authorizedUserId;\n    this.props.getProfile(id);\n    this.props.getStatus(id);\n  }\n\n  render() {\n    return (\n      <Profile {...this.props} />\n    )\n  }\n};\n\nlet mapStateToProps = (state) => ({\n  profile: state.profile.profile,\n  isFetchingProfile: state.profile.isFetchingProfile,\n  status: state.profile.status,\n  authorizedUserId: state.auth.id,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps,{getProfile: getProfileThunkCreator, getStatus, updateStatus}),\n  withUrlParams,\n  withAuthRedirect\n)(ProfileWrapper)\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n\nexport const withUrlParams= (Component) => {\n  const ComponentWithParams = (props) => {\n    return (<Component {...props} params={useParams()} />);\n  }\n\n  return ComponentWithParams;\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  const ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n  return ConnectAuthRedirectComponent;\n};\n"],"names":["submitHandler","fieldName","registerObj","placeholder","errorText","buttonText","mode","useForm","register","handleSubmit","formState","errors","isValid","isSubmitSuccessful","reset","useEffect","onSubmit","data","className","s","type","disabled","props","link","children","src","alt","required","minLength","TextareaSymbols","maxLength","addPost","newPost","Errors","posts","map","item","avatar","text","id","PostsContainer","connect","state","profile","newPostText","dispatch","post","Posts","status","updateStatus","useState","editMode","setEditMode","useStateStatus","setUseStateStatus","activeEditMode","autoFocus","onChange","e","target","value","onBlur","onDoubleClick","styles","profile__user","profile__avatar","photos","large","user","width","height","isFetchingProfile","ProfileWrapper","this","params","authorizedUserId","getProfile","getStatus","React","compose","auth","isAuth","getProfileThunkCreator","Component","useParams","withAuthRedirect","mapStateToPropsForRedirect","RedirectComponent","to"],"sourceRoot":""}