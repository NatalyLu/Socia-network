{"version":3,"file":"static/js/644.c0707bf1.chunk.js","mappings":"6KACA,EAAwB,qBAAxB,EAA6D,6BAA7D,EAAkG,qBAAlG,EAA+J,wBAA/J,EAAkM,wB,SC6ClM,EA3Cc,SAAH,GAAkG,IAA7FA,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KAAMC,EAAM,EAANA,OAAQC,EAAW,EAAXA,YAAaC,EAAW,EAAXA,YAAaC,EAAS,EAATA,UAAWC,EAAW,EAAXA,YAAaC,EAAY,EAAZA,aACxF,MAAa,aAATN,GAEA,mBAAOO,UAAWC,EAAgB,UAC/BT,GACD,kCACEQ,UAAWC,EACXR,KAAMA,GACFE,GAAW,IACfO,KAAML,QAIM,aAATJ,GAEP,mBAAOO,UAAWC,EAAQ,UACvBT,GACD,qCACEQ,UAAS,UAAKC,EAAU,YAAIP,EAAOG,GAAa,QAAU,KACtDF,GAAW,IACfF,KAAMA,EACNG,YAAaA,KAEdF,EAAOG,KAAc,cAAGG,UAAU,aAAY,SAAEN,EAAOG,GAAWM,SAAWJ,GAAgBK,EAAAA,GAAAA,0BAKhG,mBAAOJ,UAAWC,EAAQ,UACvBT,GACD,kCACEQ,UAAS,UAAKC,EAAO,YAAIP,EAAOG,GAAa,QAAU,KACnDF,GAAW,IACfU,QAAS,WAAOP,GAAa,EAC7BL,KAAMA,EACNG,YAAaA,KAEdF,EAAOG,KAAc,cAAGG,UAAU,aAAY,SAAEN,EAAOG,GAAWM,SAAWJ,GAAgBK,EAAAA,GAAAA,wBAItG,C,wJC3CA,EAAwB,qBAAxB,EAA8D,8BAA9D,EAA8G,+BAA9G,EAA6J,6B,SCwD7J,EApDkB,SAAH,GAA6B,IAAxBE,EAAK,EAALA,MAAOC,EAAU,EAAVA,WACzB,GAMIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,aANNC,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACAC,EAAQ,EAARA,SACAd,EAAW,EAAXA,YAAY,EAAD,EACXe,UAAanB,EAAM,EAANA,OAAQoB,EAAO,EAAPA,QASjBC,EAAe,QACfC,EAAkB,WAClBC,EAAiB,UACjBC,GAAiB,UAAKR,EAASK,EAAgB,CACnDI,UAAU,EACVC,QAAS,CACPC,MAAO,wJACPlB,QAAS,mCAGPmB,GAAoB,UAAKZ,EAASM,EAAmB,CACzDG,UAAU,EACVI,UAAWC,EAAAA,GAAAA,IACXC,UAAWD,EAAAA,GAAAA,OAIf,OACI,kBAAMxB,UAAWC,EAASyB,SAAUf,GAtBR,SAACgB,GAC7BrB,EAAMqB,EAAKC,MAAOD,EAAKE,SAAUF,EAAKG,WAAYH,EAAKI,QAASnB,EAClE,IAoB0E,WACtE,SAAC,IAAK,CAACnB,KAAK,QAAQC,OAAQA,EAAQC,YAAauB,EAAkBtB,YAAY,QAAQC,UAAWkB,EAAgBjB,YAAaA,EAAY,+BAE3I,SAAC,IAAK,CAACL,KAAK,WAAWC,OAAQA,EAAQC,YAAa2B,EAAqB1B,YAAY,WAAWC,UAAWmB,EAAmBlB,YAAaA,EAAaC,aAAcK,EAAAA,GAAAA,eAAsB,kCAE5L,iBAAKJ,UAAWC,EAAkB,WAC9B,oCAAWS,EAAS,eAAa,IAAEjB,KAAK,WAAWuC,GAAG,eACtD,kBAAOC,QAAQ,WAAU,4BAG5B1B,IAAc,gBAAKP,UAAWC,EAAkBiC,IAAK3B,EAAY4B,MAAM,MAAMC,OAAO,MAAMC,IAAI,YAC9F9B,IAAc,SAAC,IAAK,CAACd,KAAK,OAAOC,OAAQA,EAAQC,aAAW,UAAMe,EAASO,IAAoBrB,YAAY,+BAA+BC,UAAWoB,EAAkBnB,YAAaA,KAErL,mBAAQE,UAAWC,EAAiBR,KAAK,SAAS6C,UAAWxB,EAAQ,mBACpEpB,EAAO6C,SAAU,cAAGvC,UAAU,aAAY,SAAEN,EAAO6C,OAAOpC,YAGjE,E,kBC9BA,GAAeqC,EAAAA,EAAAA,KANS,SAACC,GAAK,MAAM,CAClCC,OAAQD,EAAME,KAAKD,OACnBnC,WAAYkC,EAAME,KAAKpC,WACvByB,GAAIS,EAAME,KAAKX,GAChB,GAEuC,CAAC1B,MAAOsC,EAAAA,GAAmBC,OAAQC,EAAAA,IAA3E,EAnBc,SAAH,GAAgC,IAA3BJ,EAAM,EAANA,OAAQV,EAAE,EAAFA,GAAOe,GAAK,YAClC,OAAIL,GACK,SAAC,KAAQ,CAACM,GAAE,UAAKC,EAAAA,GAAAA,QAAiB,YAAIjB,MAI7C,4BACE,mCACA,SAAC,GAAS,UAAKe,MAGrB,G","sources":["webpack://react-kabzda-1/./src/components/common/field/field.module.css?bce7","components/common/field/field.jsx","webpack://react-kabzda-1/./src/components/login/login.module.css?e6ba","components/login/login-form.jsx","components/login/login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"field_label__ACZMZ\",\"labelCheckbox\":\"field_labelCheckbox__1O2vY\",\"input\":\"field_input__SvBXP\",\"error\":\"field_error__jOtv7\",\"textarea\":\"field_textarea__LJPwo\",\"checkbox\":\"field_checkbox__AASu5\"};","import { Errors } from \"../../../const\";\nimport s from \"./field.module.css\";\n\nconst Field = ({children, type, errors, registerObj, placeholder, fieldName, clearErrors, errorMessage}) => {\n  if (type === \"checkbox\") {\n    return(\n      <label className={s.labelCheckbox}>\n        {children}\n        <input\n          className={s.checkbox}\n          type={type}\n          {...registerObj}\n          name={fieldName}\n        ></input>\n      </label>\n    )\n  } else if (type === \"textarea\") {\n    return(\n      <label className={s.label}>\n        {children}\n        <textarea\n          className={`${s.textarea} ${errors[fieldName] ? \"error\" : \"\"}`}\n          {...registerObj}\n          type={type}\n          placeholder={placeholder}\n        ></textarea>\n        {errors[fieldName] && <p className=\"text-error\">{errors[fieldName].message || errorMessage || Errors.DEFAULT_FIELD_ERROR}</p>}\n      </label>\n    )\n  }else {\n    return(\n      <label className={s.label}>\n        {children}\n        <input\n          className={`${s.input} ${errors[fieldName] ? \"error\" : \"\"}`}\n          {...registerObj}\n          onFocus={() => {clearErrors()}}\n          type={type}\n          placeholder={placeholder}\n        ></input>\n        {errors[fieldName] && <p className=\"text-error\">{errors[fieldName].message || errorMessage || Errors.DEFAULT_FIELD_ERROR}</p>}\n      </label>\n    )\n  } \n}\n\nexport default Field;\n","// extracted by mini-css-extract-plugin\nexport default {\"login\":\"login_login__XWvWZ\",\"login__captcha\":\"login_login__captcha__5UHmK\",\"login__checkbox\":\"login_login__checkbox__cD5y7\",\"login__submit\":\"login_login__submit__+WQSd\"};","import {useForm} from \"react-hook-form\";\nimport { Errors, InputSymbols } from \"../../const\";\nimport Field from \"../common/field/field\";\nimport s from \"./login.module.css\";\n\nconst LoginForm = ({login, captchaUrl}) => {\n  const {\n    register,\n    handleSubmit,\n    setError,\n    clearErrors,\n    formState: { errors, isValid },\n  } = useForm({\n    mode: \"onChange\"\n  });\n\n  const FormSubmitClickHandle = (data) => {\n    login(data.email, data.password, data.rememberMe, data.captcha, setError);\n  };\n\n  const fieldEmailName=\"email\";\n  const fieldPasswordName=\"password\";\n  const fieldCaptchaName=\"captcha\";\n  const emailRegisterObj= {...register(fieldEmailName, { \n    required: true,\n    pattern: {\n      value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      message: \"Please enter the valid email\"\n    }\n  })};\n  const passwordRegisterObj= {...register(fieldPasswordName, {\n    required: true,\n    minLength: InputSymbols.MIN,\n    maxLength: InputSymbols.MAX\n  })};\n  \n\nreturn(\n    <form className={s.login} onSubmit={handleSubmit(FormSubmitClickHandle)}>\n      <Field type=\"email\" errors={errors} registerObj={emailRegisterObj} placeholder=\"Email\" fieldName={fieldEmailName} clearErrors={clearErrors}>Enter your email</Field>\n\n      <Field type=\"password\" errors={errors} registerObj={passwordRegisterObj} placeholder=\"Password\" fieldName={fieldPasswordName} clearErrors={clearErrors} errorMessage={Errors.PASSWORD_ERROR}>Enter your password</Field>\n\n      <div className={s.login__checkbox}>\n          <input {...register(\"rememberMe\")} type=\"checkbox\" id=\"remember\"></input>\n          <label htmlFor=\"remember\">Remember me</label>\n      </div>\n\n      {captchaUrl && <img className={s.login__captcha} src={captchaUrl} width=\"100\" height=\"100\" alt=\"Captcha\" />}\n      {captchaUrl && <Field type=\"text\" errors={errors} registerObj={{...register(fieldCaptchaName)}} placeholder=\"Enter symbols from the image\" fieldName={fieldCaptchaName} clearErrors={clearErrors} />}\n      \n      <button className={s.login__submit} type=\"submit\" disabled={!isValid}>Login</button>\n      {errors.server && <p className=\"text-error\">{errors.server.message}</p>}\n    </form>\n  )\n};\n\nexport default LoginForm;\n","import { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {loginThunkCreator, logoutThunkCreator} from \"../../redux/auth-reducer\";\nimport LoginForm from \"./login-form\";\nimport { PathLinks } from \"../../const\";\n\nconst Login = ({isAuth, id, ...props}) => {\n  if (isAuth) {\n    return <Navigate to={`${PathLinks.PROFILE}/${id}`} />\n  }\n\n  return(\n    <div>\n      <h1>Login</h1>\n      <LoginForm {...props} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  captchaUrl: state.auth.captchaUrl,\n  id: state.auth.id\n})\n\nexport default connect(mapStateToProps, {login: loginThunkCreator, logout: logoutThunkCreator})(Login);"],"names":["children","type","errors","registerObj","placeholder","fieldName","clearErrors","errorMessage","className","s","name","message","Errors","onFocus","login","captchaUrl","useForm","mode","register","handleSubmit","setError","formState","isValid","fieldEmailName","fieldPasswordName","fieldCaptchaName","emailRegisterObj","required","pattern","value","passwordRegisterObj","minLength","InputSymbols","maxLength","onSubmit","data","email","password","rememberMe","captcha","id","htmlFor","src","width","height","alt","disabled","server","connect","state","isAuth","auth","loginThunkCreator","logout","logoutThunkCreator","props","to","PathLinks"],"sourceRoot":""}